# -*- coding: utf-8 -*-
import sys

# Form implementation generated from reading ui file 'realtime.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QEventLoop, QTimer, QThread, pyqtSignal
from data_modules import gol
from kline_min import generate_real_html
from trading_strategy_2.backtest2 import realtime


class Ui_realtime(object):
    def setupUi(self, realtime):
        realtime.setObjectName("realtime")
        realtime.resize(220, 600)
        realtime.setMinimumSize(QtCore.QSize(220, 600))
        realtime.setMaximumSize(QtCore.QSize(220, 600))
        self.centralwidget = QtWidgets.QWidget(realtime)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(30, 350, 161, 80))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.start = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.start.setObjectName("start")
        self.horizontalLayout.addWidget(self.start)
        self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.stockcode = QtWidgets.QTextEdit(self.centralwidget)
        self.stockcode.setGeometry(QtCore.QRect(30, 10, 161, 31))
        self.stockcode.setObjectName("stockcode")
        self.condition1rsi = QtWidgets.QTextEdit(self.centralwidget)
        self.condition1rsi.setGeometry(QtCore.QRect(30, 60, 161, 31))
        self.condition1rsi.setObjectName("condition1rsi")
        self.spbuyrsi = QtWidgets.QTextEdit(self.centralwidget)
        self.spbuyrsi.setGeometry(QtCore.QRect(30, 110, 161, 31))
        self.spbuyrsi.setObjectName("spbuyrsi")
        self.spsellrsi = QtWidgets.QTextEdit(self.centralwidget)
        self.spsellrsi.setGeometry(QtCore.QRect(30, 160, 161, 31))
        self.spsellrsi.setObjectName("spsellrsi")
        self.principal = QtWidgets.QTextEdit(self.centralwidget)
        self.principal.setGeometry(QtCore.QRect(30, 210, 161, 31))
        self.principal.setObjectName("principal")
        self.stoploss = QtWidgets.QTextEdit(self.centralwidget)
        self.stoploss.setGeometry(QtCore.QRect(30, 260, 161, 31))
        self.stoploss.setObjectName("stoploss")
        self.days = QtWidgets.QTextEdit(self.centralwidget)
        self.days.setGeometry(QtCore.QRect(30, 310, 161, 31))
        self.days.setObjectName("days")
        # self.output = QtWidgets.QTextBrowser(self.centralwidget)
        # self.output.setGeometry(QtCore.QRect(220, 10, 561, 551))
        # self.output.setObjectName("output")
        realtime.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(realtime)
        self.statusbar.setObjectName("statusbar")
        realtime.setStatusBar(self.statusbar)

        # 允许tab切换
        self.stockcode.setTabChangesFocus(True)
        self.condition1rsi.setTabChangesFocus(True)
        self.spbuyrsi.setTabChangesFocus(True)
        self.spsellrsi.setTabChangesFocus(True)
        self.principal.setTabChangesFocus(True)
        self.stoploss.setTabChangesFocus(True)
        self.days.setTabChangesFocus(True)

        # 设置默认值
        self.stockcode.setPlainText('600073.SH')
        self.condition1rsi.setPlainText('0.1')
        self.spbuyrsi.setPlainText('0.2')
        self.spsellrsi.setPlainText('0.1')
        self.principal.setPlainText('9999999')
        self.stoploss.setPlainText('0.3')
        self.days.setPlainText('30')

        # self.stockcode.setPlainText('股票代码 600073.SH')
        # self.condition1rsi.setPlainText('买卖条件一rsi 0.1')
        # self.spbuyrsi.setPlainText('特殊买条件rsi 0.2')
        # self.spsellrsi.setPlainText('特殊卖条件rsi 0.1')
        # self.principal.setPlainText('资金 9999999')
        # self.stoploss.setPlainText('止损率 0.3')
        # self.days.setPlainText('天数如：30')

        self.start.clicked.connect(self.run_real)
        # sys.stdout = EmittingStr_real(textWritten=self.outputWritten_real)
        # sys.stderr = EmittingStr_real(textWritten=self.outputWritten_real)


        self.retranslateUi(realtime)
        QtCore.QMetaObject.connectSlotsByName(realtime)

    def retranslateUi(self, realtime):
        _translate = QtCore.QCoreApplication.translate
        realtime.setWindowTitle(_translate("realtime", "实时"))
        self.start.setText(_translate("realtime", "开始"))
        self.pushButton.setText(_translate("realtime", "k线图"))

    # def outputWritten_real(self, text):
    #     cursor = self.output.textCursor()
    #     cursor.movePosition(QtGui.QTextCursor.End)
    #     cursor.insertText(text)
    #     self.output.setTextCursor(cursor)
    #     self.output.ensureCursorVisible()


    def run_real(self):
        code = self.stockcode.toPlainText()
        condition_rsi = float(self.condition1rsi.toPlainText())
        special_buy_rsi = float(self.spbuyrsi.toPlainText())
        special_sell_rsi = float(self.spsellrsi.toPlainText())
        principal = float(self.principal.toPlainText())
        stoploss = float(self.stoploss.toPlainText())
        days = int(self.days.toPlainText())
        gol.set_value('special_buy_rsi', special_buy_rsi)
        gol.set_value('special_sell_rsi', special_sell_rsi)
        # self.output.append(realtime(code, principal, condition_rsi, stoploss, False, True))
        realtime(code, principal, condition_rsi, stoploss, False, True, days)
        generate_real_html(code, days)



# class EmittingStr_real(QtCore.QObject):
#     textWritten = QtCore.pyqtSignal(str)  # 定义一个发送str的信号
#
#     def write(self, text):
#         self.textWritten.emit(str(text))
#         loop = QEventLoop()
#         QTimer.singleShot(10, loop.quit)
#         loop.exec_()

